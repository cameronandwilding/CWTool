<?php
/**
 * @file
 * CW-Tool tests.
 */

/**
 * Class CWToolWebTestCase
 * General functionality tests.
 */
class CWToolWebTestCase extends DrupalWebTestCase {

  /**
   * Implements DrupalTestCase::getInfo().
   */
  public static function getInfo() {
    return array(
      'name' => 'CW-Tools test',
      'description' => 'General functionality test.',
      'group' => 'CW',
    );
  }

  /**
   * Implements DrupalTestCase::setUp().
   */
  public function setUp() {
    parent::setUp(array('cw_tool'));
  }

  /**
   * Test cw_tool_check_value_in_multidimensional_array().
   * @see cw_tool_check_value_in_multidimensional_array()
   */
  public function test_cw_tool_check_value_in_multidimensional_array() {
    $haystack = array(
      array(),
      array(
        'foo' => 'bar',
        1 => 2
      ),
      array(1, 2, 3),
      array(
        0 => 0,
      ),
    );
    $result = cw_tool_check_value_in_multidimensional_array($haystack, 'foo', 'bar');
    $this->assertTrue($result, 'Item found.');

    $result = cw_tool_check_value_in_multidimensional_array($haystack, 0, 0);
    $this->assertTrue($result, 'Item found.');

    $result = cw_tool_check_value_in_multidimensional_array($haystack, 'foo', 2);
    $this->assertFalse($result, 'Item not found.');

    $result = cw_tool_check_value_in_multidimensional_array($haystack, 1, 'bar');
    $this->assertFalse($result, 'Item not found.');

    $result = cw_tool_check_value_in_multidimensional_array(array(), 'foo', 'bar');
    $this->assertFalse($result, 'Item not found.');
  }

  /**
   * Test cw_tool_delete_content_type().
   * @see cw_tool_delete_content_type()
   */
  public function test_cw_tool_delete_content_type() {
    $content_type = $this->drupalCreateContentType();
    $info = node_type_get_type($content_type->type);
    $this->assertNotNull($info, 'Content type exist.');

    cw_tool_delete_content_type($content_type->type);
    $info = node_type_get_type($content_type->type);
    $this->assertFalse($info, 'Content type removed.');
  }

  /**
   * Test cw_tool_delete_field_multiple().
   * @see cw_tool_delete_field_multiple()
   */
  public function test_cw_tool_delete_field_multiple() {
    // @todo Implement test.
  }

  /**
   * Test cw_tool_create_term_multiple().
   * @see cw_tool_create_term_multiple()
   */
  public function test_cw_tool_create_term_multiple() {
    // @todo Implement test.
  }

  /**
   * Test cw_tool_revert_feature().
   * @see cw_tool_revert_feature()
   */
  public function test_cw_tool_revert_feature() {
    // @todo Implement test.
  }

  /**
   * Test cw_tool_add_field_collection().
   * @see cw_tool_add_field_collection()
   */
  public function test_cw_tool_add_field_collection() {
    // @todo Implement test.
  }

  /**
   * Test cw_tool_delete_field_instance().
   * @see cw_tool_delete_field_instance()
   */
  public function test_cw_tool_delete_field_instance() {
    // @todo Implement test.
  }

  /**
   * Test cw_tool_convert_to_png().
   * @see cw_tool_convert_to_png()
   */
  public function test_cw_tool_convert_to_png() {
    // @todo Implement test.
  }

  /**
   * Test cw_tool_watchdog().
   * @see cw_tool_watchdog()
   */
  public function test_cw_tool_watchdog() {
    // @todo Implement test.
  }

  /**
   * Test cw_tool_purge_terms().
   * @see cw_tool_purge_terms()
   */
  public function test_cw_tool_purge_terms() {
    // @todo Implement test.
  }

  /**
   * Test cw_tool_purge_all_terms_except_listed_terms().
   * @see cw_tool_purge_all_terms_except_listed_terms()
   */
  public function test_cw_tool_purge_all_terms_except_listed_terms() {
    // @todo Implement test.
  }

  /**
   * Test cw_tool_delete_term_multiple().
   * @see cw_tool_delete_term_multiple()
   */
  public function test_cw_tool_delete_term_multiple() {
    // @todo Implement test.
  }

  /**
   * Test cw_tool_print_backtrace().
   * @see cw_tool_print_backtrace()
   */
  public function test_cw_tool_print_backtrace() {
    // @todo Implement test.
  }

  /**
   * Test cw_tool_user_has_role().
   * @see cw_tool_user_has_role()
   */
  public function test_cw_tool_user_has_role() {
    // @todo Implement test.
  }

  /**
   * Test cw_tool_file_exists_case_insensitive().
   * @see cw_tool_file_exists_case_insensitive()
   */
  public function test_cw_tool_file_exists_case_insensitive() {
    // @todo Implement test.
  }

  /**
   * Test cw_tool_reset_taxonomy_to_alphabetical().
   * @see cw_tool_reset_taxonomy_to_alphabetical()
   */
  public function test_cw_tool_reset_taxonomy_to_alphabetical() {
    // @todo Implement test.
  }

  /**
   * Test cw_tool_save_fields_on_entity().
   * @see cw_tool_save_fields_on_entity()
   */
  public function test_cw_tool_save_fields_on_entity() {
    // @todo Implement test.
  }

  /**
   * Test cw_tool_purge_terms_of_vocabulary().
   * @see cw_tool_purge_terms_of_vocabulary()
   */
  public function test_cw_tool_purge_terms_of_vocabulary() {
    // @todo Implement test.
  }

  /**
   * Test cw_tool_delete_vocabulary().
   * @see cw_tool_delete_vocabulary()
   */
  public function test_cw_tool_delete_vocabulary() {
    // @todo Implement test.
  }

  /**
   * Test cw_tool_delete_vocabulary_multiple().
   * @see cw_tool_delete_vocabulary_multiple()
   */
  public function test_cw_tool_delete_vocabulary_multiple() {
    // @todo Implement test.
  }

  /**
   * Test cw_tool_add_submenus().
   * @see cw_tool_add_submenus()
   */
  public function test_cw_tool_add_submenus() {
    // @todo Implement test.
  }

  /**
   * Test cw_tool_get_value_in_an_object_or_array_field_collection_field().
   * @see cw_tool_get_value_in_an_object_or_array_field_collection_field()
   */
  public function test_cw_tool_get_value_in_an_object_or_array_field_collection_field() {
    // @todo Implement test.
  }

}
